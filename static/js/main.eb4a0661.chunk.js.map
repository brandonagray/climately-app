{"version":3,"sources":["components/SearchBox/SearchBox.jsx","components/UnitSelect/UnitSelect.jsx","components/Navbar/Navbar.jsx","utils/utils.js","components/CurrentForecast/CurrentForecast.jsx","components/MultiDayForecast/MultiDayForecast.jsx","components/Graph/Graph.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["SearchBox","props","handleQueryChange","e","setState","query","target","value","handleSearch","preventDefault","searchSubmit","state","className","onSubmit","this","type","name","id","placeholder","onChange","style","borderBottom","accentColor","onClick","background","Component","UnitSelect","changeUnit","newUnit","textContent","onUnitChange","unit","Navbar","sendNewUnitToParent","sendQueryStringToParent","data","city","blue","yellow","gray","getIconClassName","weatherId","hasWeatherId","idArray","indexOf","moment","require","CurrentForecast","day","date","description","mainTemp","minTemp","maxTemp","pressure","humidity","windSpeed","hours","localTime","timezoneId","iconClass","windSpeedUnit","tz","format","MultiDayForecast","items","map","singleDayData","key","SingleListItem","Graph","height","color","fill","App","notifyStateChange","onSearchSubmit","queryString","latLng","hasLatLng","length","hasCityOrZipcode","fetchCurrentForecast","then","currentData","navbarData","extractDataForNavbar","currentForecastData","extractDataForCurrentForecast","fetchLocationTime","coords","timestamp","catch","error","console","log","fetchDailyWeatherForecast","forecastData","extractDataForMultiDayAndGraphComponents","multiDayForecastData","graphData","queryParams","unitType","url","axios","get","response","lat","lon","locationTimezoneData","extractDataForTimezone","sys","country","timeZoneId","Date","time","JSON","parse","stringify","weather","main","Math","round","temp","temp_min","temp_max","wind","speed","coord","dt","getDay","list","forEach","forecast","item","push","shift","geolocation","navigator","getCurrentPosition","position","latitude","longitude","shouldRenderApp","instructionLayout","mainAppLayout","Fragment","dots","wheel","arrows","autoplay","autoplaySpeed","adaptiveHeight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb4a0661.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nclass SearchBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\"\r\n    };\r\n  }\r\n\r\n  handleQueryChange = e => {\r\n    this.setState({\r\n      query: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n    this.props.searchSubmit(this.state.query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form onSubmit={this.handleSearch}>\r\n          <input\r\n            type=\"search\"\r\n            value={this.state.query}\r\n            name=\"searchBox\"\r\n            id=\"searchBox\"\r\n            placeholder=\"Enter City\"\r\n            onChange={this.handleQueryChange}\r\n            style={{borderBottom: `2px solid ${this.props.accentColor}`}}\r\n          />\r\n          <span\r\n            className=\"search-button fa fa-search\"\r\n            onClick={this.handleSearch}\r\n            style={{background: `${this.props.accentColor}`, borderBottom: `1px solid ${this.props.accentColor}`}}\r\n          ></span>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport \"./UnitSelect.css\";\r\n\r\nclass UnitSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      unit: \"C\"\r\n    };\r\n  }\r\n\r\n  changeUnit = e => {\r\n    const newUnit = e.target.textContent;\r\n    this.props.onUnitChange(newUnit);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"unit-container\">\r\n        <span\r\n          className={`unit-value ${\r\n            this.props.unit === \"C\" ? \"active-unit\" : \"\"\r\n          }`}\r\n          style={{\r\n            borderBottom:\r\n              this.props.unit === \"C\"\r\n                ? `1px solid ${this.props.accentColor}`\r\n                : \"none\",\r\n            background:\r\n              this.props.unit === \"C\"\r\n                ? `${this.props.accentColor}`\r\n                : \"transparent\"\r\n          }}\r\n          onClick={this.changeUnit}\r\n        >\r\n          C\r\n        </span>\r\n        <span\r\n          className={`unit-value ${\r\n            this.props.unit === \"F\" ? \"active-unit\" : \"\"\r\n          }`}\r\n          style={{\r\n            borderBottom:\r\n              this.props.unit === \"F\"\r\n                ? `1px solid ${this.props.accentColor}`\r\n                : \"none\",\r\n            background:\r\n              this.props.unit === \"F\"\r\n                ? `${this.props.accentColor}`\r\n                : \"transparent\"\r\n          }}\r\n          onClick={this.changeUnit}\r\n        >\r\n          F\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnitSelect;\r\n","import React, { Component } from \"react\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport UnitSelect from \"../UnitSelect/UnitSelect\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n  sendNewUnitToParent = newUnit => {\r\n    this.props.changeUnit(newUnit);\r\n  };\r\n\r\n  sendQueryStringToParent = query => {\r\n    this.props.searchSubmit(query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <ul className=\"navbar-container\">\r\n          <li className=\"navbar-list-item\">\r\n            <SearchBox searchSubmit={this.sendQueryStringToParent} accentColor={this.props.accentColor} />\r\n          </li>\r\n          <li className=\"navbar-list-item city-name\">\r\n            <span className=\"\">{this.props.data.city}</span>\r\n          </li>\r\n          <li className=\"navbar-list-item\">\r\n            <UnitSelect\r\n              unit={this.props.unit}\r\n              onUnitChange={this.sendNewUnitToParent}\r\n              accentColor={this.props.accentColor}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","const blue = [300, 301, 302, 310, 311, 313, 314, 321, 500, 501, 502, 503, 504, 511, 520, 521, 522, 531, 611, 612, 615, 616, 620, 701]\r\nconst yellow = [210, 211, 212, 221, 731, 761, 762, 800]\r\nconst gray = [200, 201, 202, 230, 231, 232, 600, 601, 602, 621, 622, 711, 721, 741, 771, 781, 801, 802, 803, 804]\r\n\r\nconst CLASS_BLUE = 'wi-blue';\r\nconst CLASS_YELLOW = 'wi-yellow';\r\nconst CLASS_GRAY = 'wi-gray'\r\n\r\nexport const getIconClassName = weatherId => {\r\n  const hasWeatherId = (idArray, id) => idArray.indexOf(id) > -1;\r\n  if (hasWeatherId(blue, weatherId)) return CLASS_BLUE;\r\n  else if (hasWeatherId(yellow, weatherId)) return CLASS_YELLOW;\r\n  else if (hasWeatherId(gray, weatherId)) return CLASS_GRAY;\r\n  else return CLASS_BLUE;\r\n};","import React, { Component } from \"react\";\r\nimport \"./CurrentForecast.scss\";\r\nimport { getIconClassName } from \"../../utils/utils\";\r\nvar moment = require(\"moment-timezone\");\r\n\r\nclass CurrentForecast extends Component {\r\n  render() {\r\n    const {\r\n      day,\r\n      date,\r\n      weatherId,\r\n      description,\r\n      mainTemp,\r\n      minTemp,\r\n      maxTemp,\r\n      pressure,\r\n      humidity,\r\n      windSpeed,\r\n      hours,\r\n      localTime,\r\n      timezoneId,\r\n    } = this.props.data;\r\n    const { unit } = this.props;\r\n    const iconClass = getIconClassName(weatherId);\r\n    const windSpeedUnit = unit === \"C\" ? \"m/s\" : \"miles/hr\";\r\n    \r\n    let accentColor = 0;\r\n\r\n    if (hours >= 0 && hours < 6) {\r\n      accentColor = 1;\r\n    } else if (hours >= 6 && hours < 12) {\r\n      accentColor = 2;\r\n    } else if (hours >= 12 && hours < 18) {\r\n      accentColor = 3;\r\n    } else if (hours >= 18 && hours < 24) {\r\n      accentColor = 4;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"current-forecast-container\">\r\n          <div className=\"date-container\">\r\n            <div className=\"time-container\">\r\n              {localTime ? moment.tz(localTime, timezoneId).format(\"h:mm A\") : null}\r\n            </div>\r\n            <div>{day}</div>\r\n            <div>{date}</div>\r\n          </div>\r\n\r\n          <div className=\"icon-desc-container\">\r\n            <div className=\"icon-conatainer\">\r\n              <i\r\n                className={`wi wi-owm-${weatherId} weather-icon ${iconClass}`}\r\n              ></i>\r\n            </div>\r\n            <div className=\"weather-desc\">{description}</div>\r\n          </div>\r\n\r\n          <div className=\"temp-container\">\r\n            <div className=\"temp-text\">\r\n              <span>{mainTemp}</span>\r\n              <i className=\"wi wi-degrees\"></i>\r\n            </div>\r\n            <div className=\"high-low-container\">\r\n              <div className={`high-low-item accent-color-${accentColor}`}>\r\n                <span>\r\n                  <i className=\"wi wi-direction-up\"></i>\r\n                </span>\r\n                <span>Max</span>\r\n                <span>\r\n                  <span>{maxTemp}&#x00B0;</span>\r\n                </span>\r\n              </div>\r\n              <div className={`high-low-item accent-color-${accentColor}`}>\r\n                <span>\r\n                  <i className=\"wi wi-direction-down\"></i>\r\n                </span>\r\n                <span>Min</span>\r\n                <span>\r\n                  <span>{minTemp}&#x00B0;</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"extra-info-container\">\r\n          <div className={`extra-info-item  accent-color-${accentColor}`}>\r\n            <span>\r\n              <i className=\"wi wi-humidity\"></i>\r\n            </span>\r\n            <span>Humidity:</span>\r\n            <span>{humidity}%</span>\r\n          </div>\r\n          <div className={`extra-info-item  accent-color-${accentColor}`}>\r\n            <span>\r\n              <i className=\"wi wi-barometer\"></i>\r\n            </span>\r\n            <span>Pressure:</span>\r\n            <span>{pressure} hPa</span>\r\n          </div>\r\n          <div className={`extra-info-item  accent-color-${accentColor}`}>\r\n            <span>\r\n              <i className=\"wi wi-strong-wind\"></i>\r\n            </span>\r\n            <span>Wind:</span>\r\n            <span>\r\n              {windSpeed} {windSpeedUnit}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentForecast;\r\n","import React, { Component } from \"react\";\r\nimport \"./MultiDayForecast.scss\";\r\nimport { getIconClassName } from \"../../utils/utils\";\r\n\r\nclass MultiDayForecast extends Component {\r\n  render() {\r\n    const { hours } = this.props.data;\r\n\r\n    let accentColor = 0;\r\n\r\n    if (hours >= 0 && hours < 6) {\r\n      accentColor = 1;\r\n    } else if (hours >= 6 && hours < 12) {\r\n      accentColor = 2;\r\n    } else if (hours >= 12 && hours < 18) {\r\n      accentColor = 3;\r\n    } else if (hours >= 18 && hours < 24) {\r\n      accentColor = 4;\r\n    }\r\n\r\n    const items = this.props.data.map(singleDayData => (\r\n      <SingleListItem\r\n        key={singleDayData.day}\r\n        data={singleDayData}\r\n        accentColor={accentColor}\r\n      />\r\n    ));\r\n    return (\r\n      <div>\r\n        <p className=\"multiday-forecast-info\">6-Day Forecast</p>\r\n        <div className=\"multiday-forecast-container\">{items}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SingleListItem = props => {\r\n  const { day, weatherId, description, mainTemp } = props.data;\r\n  const accentColor = props.accentColor;\r\n  const iconClass = getIconClassName(weatherId);\r\n  return (\r\n    <div className={`single-list-item accent-color-${accentColor}`}>\r\n      <div className=\"li-info-container\">\r\n        <div className=\"li-day\">{day}</div>\r\n        <div className=\"li-temp-text\">{mainTemp}&#x00B0;</div>\r\n        <div className=\"li-desc\">{description}</div>\r\n      </div>\r\n      <div className=\"li-weather-icon\">\r\n        <i className={`wi wi-owm-${weatherId} ${iconClass}`}></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiDayForecast;\r\n","import React, { Component } from \"react\";\r\nimport { Sparklines, SparklinesLine, SparklinesSpots } from \"react-sparklines\";\r\nimport \"./Graph.scss\";\r\n\r\nclass Graph extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"graph-container\">\r\n        <p className=\"graph-info\">6-Day Trend</p>    \r\n        <div className=\"graph\">\r\n          <Sparklines data={this.props.data} height={50}>\r\n            <SparklinesLine color={this.props.accentColor} />\r\n            <SparklinesSpots style={{ fill: \"#ffffff\" }} />\r\n          </Sparklines>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Slider from 'infinite-react-carousel';\nimport Navbar from \"../Navbar/Navbar\";\nimport CurrentForecast from \"../CurrentForecast/CurrentForecast\";\nimport MultiDayForecast from \"../MultiDayForecast/MultiDayForecast\";\nimport Graph from \"../Graph/Graph\";\nimport \"./App.scss\";\n\nvar moment = require(\"moment-timezone\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unit: \"C\",\n      queryString: \"\",\n      latLng: [],\n      accentColor: \"transparent\",\n      navbarData: {},\n      currentForecastData: {},\n      locationTimezoneData: {},\n      multiDayForecastData: [],\n      graphData: []\n    };\n  }\n\n  componentDidMount() {\n    const geolocation = navigator.geolocation;\n\n    // If allowed...\n    if (geolocation) {\n      const permissionGranted = position => {\n        this.setState(\n          {\n            latLng: [position.coords.latitude, position.coords.longitude]\n          },\n          this.notifyStateChange\n        );\n      };\n\n      const permissionDenied = () => {\n        console.log(\"Permission Denied\");\n      };\n\n      geolocation.getCurrentPosition(permissionGranted, permissionDenied);\n    } else {\n      console.log(\"GeoLocation not supported...\");\n    }\n  }\n\n  onUnitChange = newUnit => {\n    this.setState(\n      {\n        unit: newUnit\n      },\n      this.notifyStateChange\n    );\n  };\n\n  onSearchSubmit = query => {\n    this.setState(\n      {\n        queryString: query,\n        latLng: []\n      },\n      this.notifyStateChange\n    );\n  };\n\n  notifyStateChange = () => {\n    const hasLatLng = this.state.latLng.length > 0;\n    const hasCityOrZipcode = this.state.queryString !== \"\";\n\n    if (hasLatLng || hasCityOrZipcode) {\n      this.fetchCurrentForecast(hasLatLng)\n        .then(currentData => {\n          const navbarData = this.extractDataForNavbar(currentData);\n          const currentForecastData = this.extractDataForCurrentForecast(\n            currentData\n          );\n\n          this.fetchLocationTime(\n            currentForecastData.coords,\n            currentForecastData.timestamp\n          );\n\n          this.setState({\n            navbarData,\n            currentForecastData\n          });\n        })\n        .catch(error => {\n          console.log(\"Error:\", error);\n        });\n\n      this.fetchDailyWeatherForecast(hasLatLng)\n        .then(forecastData => {\n          const {\n            multiDayForecastData,\n            graphData\n          } = this.extractDataForMultiDayAndGraphComponents(forecastData);\n\n          this.setState({\n            multiDayForecastData,\n            graphData\n          });\n        })\n        .catch(error => {\n          console.log(\"Error:\", error);\n        });\n    }\n  };\n\n  fetchCurrentForecast = hasLatLng => {\n    const API_KEY = \"e936cc62b3f22eb537ef8c1e231de24f\";\n    const BASE_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n    const queryParams = hasLatLng\n      ? `lat=${this.state.latLng[0]}&lon=${this.state.latLng[1]}`\n      : `q=${this.state.queryString}`;\n    const unitType = this.state.unit === \"C\" ? \"metric\" : \"imperial\";\n\n    const url = `${BASE_URL}?${queryParams}&units=${unitType}&cnt=7&appid=${API_KEY}`;\n\n    return axios\n      .get(url)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => {\n        console.log(\"Error:\", error);\n      });\n  };\n\n  fetchDailyWeatherForecast = hasLatLng => {\n    const API_KEY = \"e936cc62b3f22eb537ef8c1e231de24f\";\n    const BASE_URL = \"https://api.openweathermap.org/data/2.5/forecast/daily\";\n    const queryParams = hasLatLng\n      ? `lat=${this.state.latLng[0]}&lon=${this.state.latLng[1]}`\n      : `q=${this.state.queryString}`;\n    const unitType = this.state.unit === \"C\" ? \"metric\" : \"imperial\";\n\n    const url = `${BASE_URL}?${queryParams}&units=${unitType}&cnt=7&appid=${API_KEY}`;\n\n    return axios\n      .get(url)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => {\n        console.log(\"Error:\", error);\n      });\n  };\n\n  fetchLocationTime = (coords, timestamp) => {\n    const API_KEY = \"AIzaSyAxc2CKDD9g8c9Wxgryv_7RTvddmkEEd1U\";\n    const BASE_URL = \"https://maps.googleapis.com/maps/api/timezone/json\";\n\n    const url = `${BASE_URL}?location=${coords.lat},${coords.lon}&timestamp=${timestamp}&key=${API_KEY}`;\n\n    return axios\n      .get(url)\n      .then(response => {\n        const locationTimezoneData = this.extractDataForTimezone(response.data);\n\n        this.setState({\n          locationTimezoneData\n        });\n      })\n      .catch(error => {\n        console.log(\"Error:\", error);\n      });\n  };\n\n  extractDataForNavbar = currentData => {\n    return {\n      city: `${currentData.name}, ${currentData.sys.country}`\n    };\n  };\n\n  extractDataForTimezone = locationTimezoneData => {\n    const timezoneId = locationTimezoneData.timeZoneId;\n\n    let timestamp = new Date(this.state.currentForecastData.timestamp * 1000);\n\n    locationTimezoneData.time = moment.tz(timestamp, timezoneId).format();\n    locationTimezoneData.hours = moment.tz(timestamp, timezoneId).format(\"H\");\n    locationTimezoneData.day = moment.tz(timestamp, timezoneId).format(\"dddd\");\n    locationTimezoneData.date = moment.tz(timestamp, timezoneId).format(\"MMMM DD, YYYY\");\n\n    let localTime = locationTimezoneData.time;\n    let hours = locationTimezoneData.hours;\n    let day = locationTimezoneData.day;\n    let date = locationTimezoneData.date;\n\n    //Add timezone to current and multiday data states\n    let currentData = JSON.parse(\n      JSON.stringify(this.state.currentForecastData)\n    );\n\n    currentData.localTime = localTime;\n    currentData.timezoneId = timezoneId;\n    currentData.hours = hours;\n    currentData.day = day;\n    currentData.date = date;\n\n    let forecastData = JSON.parse(\n      JSON.stringify(this.state.multiDayForecastData)\n    );\n    forecastData.hours = hours;\n\n    let color = this.state.accentColor;\n\n    if (hours >= 0 && hours < 6) {\n      color = \"#fe1743\";\n    } else if (hours >= 6 && hours < 12) {\n      color = \"#a96ed3\";\n    } else if (hours >= 12 && hours < 18) {\n      color = \"#19b4fc\";\n    } else if (hours >= 18 && hours < 24) {\n      color = \"#fcc319\";\n    }\n\n    this.setState({\n      currentForecastData: currentData,\n      multiDayForecastData: forecastData,\n      accentColor: color,\n    });\n\n    return {\n      hours,\n      day,\n      date,\n    };\n  };\n\n  extractDataForCurrentForecast = currentData => {\n    const weather = currentData.weather[0].main;\n    const weatherId = currentData.weather[0].id;\n    const description = currentData.weather[0].description;\n\n    const mainTemp = Math.round(currentData.main.temp);\n    const minTemp = Math.round(currentData.main.temp_min);\n    const maxTemp = Math.round(currentData.main.temp_max);\n\n    const pressure = currentData.main.pressure;\n    const humidity = currentData.main.humidity;\n    const windSpeed = currentData.wind.speed;\n\n    const coords = currentData.coord;\n\n    const timestamp = currentData.dt;\n\n    return {\n      weather,\n      weatherId,\n      description,\n      mainTemp,\n      minTemp,\n      maxTemp,\n      pressure,\n      humidity,\n      windSpeed,\n      coords,\n      timestamp,\n    };\n  };\n\n    // Take date object or unix timestamp in ms and return day string\n    getDay = time => {\n      const daysNames = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday \",\n        \"Friday\",\n        \"Saturday\",\n        \"Tomorrow\"\n      ];\n      return daysNames[new Date(time).getDay()];\n    };\n\n  extractDataForMultiDayAndGraphComponents = forecastData => {\n    const multiDayForecastData = [];\n    const graphData = [];\n\n    forecastData.list.forEach(forecast => {\n      let item = {};\n      item.day = this.getDay(forecast.dt * 1000);\n      item.weatherId = forecast.weather[0].id;\n      item.description = forecast.weather[0].description;\n      item.mainTemp = Math.round(forecast.temp.day);\n\n      multiDayForecastData.push(item);\n      graphData.push(forecast.temp.day);\n    });\n\n    // Remove first element (current weather)\n    multiDayForecastData.shift();\n\n    return {\n      multiDayForecastData,\n      graphData\n    };\n  };\n\n  render() {\n    const hasLatLng = this.state.latLng.length > 0;\n    const hasCityOrZipcode = this.state.queryString !== \"\";\n    const shouldRenderApp = hasLatLng || hasCityOrZipcode;\n\n    const instructionLayout = (\n      <div className=\"app-instructions\">\n        <p>\n          Allow Location Access or type city name/zip code in search area to get\n          started.\n        </p>\n      </div>\n    );\n\n    const mainAppLayout = (\n      <React.Fragment>\n        <div className=\"app-today\">\n          <CurrentForecast\n            data={this.state.currentForecastData}\n            unit={this.state.unit}\n          />\n        </div>\n        <div className=\"app-list-graph\">\n          <Slider dots wheel={true} arrows={false} autoplay={true} autoplaySpeed={5000} adaptiveHeight={true}>\n            <div id=\"tab1\">\n              <MultiDayForecast data={this.state.multiDayForecastData} />\n            </div>\n            <div id=\"tab2\">\n              <Graph data={this.state.graphData} accentColor={this.state.accentColor} />\n            </div>\n          </Slider>\n        </div>\n      </React.Fragment>\n    );\n\n    return (\n      <React.Fragment>\n        { ((this.state.locationTimezoneData.hours >= 20) || (this.state.locationTimezoneData.hours <= 5)) ? <div className=\"stars\"></div> : null }\n        { this.state.currentForecastData.weather === 'Rain' ? <div className=\"rain\"></div> : null }\n        <div\n          className={`app-container hour-${\n            this.state.locationTimezoneData\n              ? this.state.locationTimezoneData.hours\n              : 0\n          }`}\n        >\n          <div className=\"app-nav\">\n            <Navbar\n              searchSubmit={this.onSearchSubmit}\n              changeUnit={this.onUnitChange}\n              unit={this.state.unit}\n              data={this.state.navbarData}\n              accentColor={this.state.accentColor}\n            />\n          </div>\n          {shouldRenderApp ? mainAppLayout : instructionLayout}\n        </div>\n        { (this.state.currentForecastData.weather === 'Clouds' || this.state.currentForecastData.weather === 'Rain' || this.state.currentForecastData.weather === 'Snow') ? <div className=\"clouds clouds1\"></div> : null }\n        { (this.state.currentForecastData.weather === 'Clouds' || this.state.currentForecastData.weather === 'Rain' || this.state.currentForecastData.weather === 'Snow') ? <div className=\"clouds clouds2\"></div> : null }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/App/App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}